FUNZIONI PER LAVORARE CON IL TERMINALE
======================================

vedere "../globals.txt"
vedere "./string.txt"

Questo file contiene implementazioni di diverse funzioni per poter lavorare con
il terminale.


--------------------------------------------------------------------------------


FUNZIONE clear_screen()
=======================

Cancella tutto il contenuto presente a schermo utilizzando direttive specifiche
per il sistema operativo.

INPUT:
- nullo, non riceve nulla.

OUTPUT:
- nullo, non restituisce nulla.


------------------------------------------------------------


FUNZIONE clear_line()
=====================

Cancella l'ultima riga su cui si è stampato qualcosa utilizzando delle direttive
specifiche per il sistema operativo.

INPUT:
- nullo, non riceve nulla.

OUTPUT:
- nullo, non restituisce nulla.


------------------------------------------------------------


FUNZIONE get_term_size()
========================

Restituisce le dimensioni del terminale utilizzando direttive specifiche per il
sistema operativo.

INPUT:
- width, variabile che riceverà il valore della larghezza del terminale, intero
  maggiore di zero;
- height, variabile che riceverà il valore dell'altezza del terminale, intero
  maggiore di zero.

OUTPUT:
- width, il valore della larghezza del terminale, intero maggiore di zero;
- height, il valore dell'altezza del terminale, intero maggiore di zero;


------------------------------------------------------------


FUNZIONE print_from_file()
==========================

Questa funzione legge il contenuto di un file riga per riga e lo stampa.

INPUT:
- file, file di cui leggere il contenuto, file.

ALGORITMO:
StampareAVideo(LeggereDaFile(file))

FUNZIONE print_menu()
=====================

Stampa a video un menu contenuto in un file di testo.

INPUT:
- filename, nome del file da aprire, stringa.

OUTPUT:
- nullo, non ha output.

LAVORO:
- file, file da cui leggere il menu, file;
- width, larghezza della finestra del terminale, intero positivo;
- height, altezza della finestra del terminale, intero positivo;
- menu, array di MAX_MENU_LINES stringhe con lunghezza MAX_BUFFER_LEN, array bidimensionale;
- buffer, stringa di lunghezza MAX_BUFFER_LEN, stringa;
- num_lines, numero di righe del file, intero positivo;
- max_len, lunghezza della righa più lunga del menù, intero positivo;
- i, contatore utilizzato per iterazioni, intero positivo;
- vert_padding, indica di quanto spostare verso il basso il menu, intero positivo;
- left_padding, indica di quanto spostare verso destra la singola voce, intero positivo.

ALGORITMO:
file = AprireFile(filename)
SE (file non esiste)
  ALLORA esci
FINE
get_term_size(width, height)

num_lines := 0
max_len := 0

MENTRE (num_lines < MAX_MENU_LINES)
  buffer := LeggereDaFile(file)
  max_len := max(str_length(buffer), max_len)

  // copy string char by char
  i := 0
  MENTRE (i < str_length(buffer))
    carattere in posizione i della stringa in posizione num_lines di menu :=
      carattere in posizione i di buffer
    i := i + 1
  FINE
  num_lines := num_lines + 1
FINE
ChiudereFile(file)

// print vertical padding to center menu
i := 0
vert_padding := (height - num_lines - 2) * 0.45
MENTRE (i < vert_padding)
  StampareAVideo(STR_END)
  i := i + 1
FINE

// print horizontal padding
i := 0
left_padding := (width - max_len) * 0.5
MENTRE (i < num_lines)
  j := 0
  MENTRE (j < left_padding)
    StampareAVideo(SPACE_CHAR)
    j := j + 1
  FINE
  StampareAVideo(elemento in posizione i di menu)
  i := i + 1
FINE
StampareAVideo(LINE_END)


FUNZIONE print_file()
=====================

Stampa a video il contenuto di un file di testo.

INPUT:
- filename, nome del file di cui stampare il contenuto, stringa.

OUTPUT:
- nullo, non ha output.

LAVORO:
- file, file di cui stampare il contenuto, file;
- width, larghezza della finestra del terminale, intero positivo;
- height, altezza della finestra del terminale, intero positivo;
- buffer, stringa contenente una riga del file, stringa;
- num_lines, numero di righe del file, intero positivo;

ALGORITMO:
file = AprireFile(filename)
SE (file non esiste)
  ALLORA esci
FINE
get_term_size(width, height)

num_lines := 0
MENTRE (num_lines < MAX_FILE_LINES)
  buffer := LeggereDaFile(file)
  StampareAVideo(buffer)
  num_lines := num_lines + 1
FINE
ChiudereFile(file)


FUNZIONE wait_keypress()
========================

Stampa il messaggio che riceve in input e attende che l'utente prema un tasto
qualsiasi.

INPUT:
- message, il messaggio da stampare a video, stringa.

OUTPUT:
- nullo, non ha output.

LAVORO:
- wait, indica se attendere l'input dell'utente, booleano che assume valore TRUE
  se è necessario attendere l'input, FALSE altrimenti.

ALGORITMO:
StampareAVideo(message)

wait := TRUE
MENTRE (wait)
  SE (LeggereDaTastiera() non è nullo)
    ALLORA wait := FALSE
  FINE
FINE
